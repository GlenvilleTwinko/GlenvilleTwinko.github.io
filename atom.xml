<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Twinko&#39;s Blog</title>
  
  
  <link href="http://etvvil.github.io/atom.xml" rel="self"/>
  
  <link href="http://etvvil.github.io/"/>
  <updated>2022-04-26T15:51:38.041Z</updated>
  <id>http://etvvil.github.io/</id>
  
  <author>
    <name>Twinko</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>195_B</title>
    <link href="http://etvvil.github.io/2022/04/26/195-B/"/>
    <id>http://etvvil.github.io/2022/04/26/195-B/</id>
    <published>2022-04-26T15:46:19.000Z</published>
    <updated>2022-04-26T15:51:38.041Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h3 id="Problem-Statement"><a href="#Problem-Statement" class="headerlink" title="Problem Statement"></a>Problem Statement</h3><p>We have many oranges. It is known that every orange weighs between A and B grams, inclusive. (An orange can have a non-integer weight.)</p><p>We chose some of those oranges, and their total weight was exactly W kilograms.</p><p>Find the minimum and maximum possible numbers of oranges chosen. If no set of oranges can weigh exactly W kilograms in total, report that fact.</p><hr><h3 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h3><p>1 ≤ A ≤ B ≤ 1000<br>1 ≤ W ≤ 1000<br>All values in input are integers.</p><hr><h3 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h3><p>Input is given from Standard Input in the following format:</p><pre><code class="c++">A B W</code></pre><h3 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h3><p>Print the minimum and maximum possible numbers of oranges chosen, in this order, with space in between. If there is no number of oranges that can have the specified total weight, print <code>UNSATISFIABLE</code> instead.</p><hr><h3 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1"></a>Sample Input 1</h3><pre><code class="c++">100 200 2</code></pre><h3 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1"></a>Sample Output 1</h3><pre><code class="c++">10 20</code></pre><p>Here, one range weighs between 100 and 200 grams (inclusive).</p><ul><li>If we choose 10 200-gram oranges, their total weight will be exactly 2 kilograms.</li><li>If we choose 20 100-gram oranges, their total weight will be exactly 2 kilograms.</li></ul><p>With less than 10 oranges or more than 20 oranges, the total weight will never be exactly 2 kilograms, so the minimum and maximum possible numbers of oranges chosen are 10 and 20, respectively.</p><p><strong>—————————————————————-分割线—————————————————————-</strong></p><h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><p>​    只要满足<code>AN &lt;= 1000W &lt;= BN</code>的N都可以，因为只要从<code>AN</code>开始遍历，一定可以不遗漏地遍历到<code>BN</code>，比如递推地A<sub>i</sub>一直加到B。</p><h3 id="代码如下："><a href="#代码如下：" class="headerlink" title="代码如下："></a>代码如下：</h3><pre><code class="c++">#include&lt;bits/stdc++.h&gt;using namespace std;const int INF = 1e9;int main(){    int a, b, w;    while(cin &gt;&gt; a &gt;&gt; b &gt;&gt; w){        w *= 1000;        int an = INF, ax = 0;        for(int i = 1; i &lt;= 1e6; ++i){            if(a*i&lt;=w &amp;&amp; w&lt;=b*i){                an = min(an, i);                ax = max(ax, i);            }        }        if(an == INF) printf("UNSATISFIABLE\n");        else printf("%d %d\n", an, ax);    }    exit(0);}</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;h3 id=&quot;Problem-Statement&quot;&gt;&lt;a href=&quot;#Problem-Statement&quot; class=&quot;he</summary>
      
    
    
    
    <category term="Atcoder_ABC组 - B组题" scheme="http://etvvil.github.io/categories/Atcoder-ABC%E7%BB%84-B%E7%BB%84%E9%A2%98/"/>
    
    
    <category term="算法" scheme="http://etvvil.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>216_B</title>
    <link href="http://etvvil.github.io/2022/04/09/216-B/"/>
    <id>http://etvvil.github.io/2022/04/09/216-B/</id>
    <published>2022-04-08T16:42:51.000Z</published>
    <updated>2022-04-25T16:17:16.026Z</updated>
    
    <content type="html"><![CDATA[<h1 id="216-B"><a href="#216-B" class="headerlink" title="216_B"></a>216_B</h1><pre><code class="c++">#include&lt;bits/stdc++.h&gt;using namespace std;int main(){    int n;    cin &gt;&gt; n;    vector&lt;string&gt; S(n), T(n);    for(int i = 0; i &lt; n ; i++)        cin &gt;&gt; S[i] &gt;&gt; T[i];    for(int j = 0; j &lt; n; j++)        for(int i = j + 1; i &lt; n; i++){            if(S[i] == S[j] &amp;&amp; T[i] == T[j]){                cout &lt;&lt; "Yes\n";                return 0;            }        }    cout &lt;&lt; "No\n";    return 0;}</code></pre><p>此题要注意合并字符串再来判断会出错(我), 因为是姓和名分开对比,</p><p>例如:</p><p>abc bca</p><p>ab cbca  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;216-B&quot;&gt;&lt;a href=&quot;#216-B&quot; class=&quot;headerlink&quot; title=&quot;216_B&quot;&gt;&lt;/a&gt;216_B&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;c++&quot;&gt;#include&amp;lt;bits/stdc++.h&amp;gt;
using na</summary>
      
    
    
    
    <category term="Atcoder_ABC组" scheme="http://etvvil.github.io/categories/Atcoder-ABC%E7%BB%84/"/>
    
    <category term="B组题" scheme="http://etvvil.github.io/categories/Atcoder-ABC%E7%BB%84/B%E7%BB%84%E9%A2%98/"/>
    
    
    <category term="算法" scheme="http://etvvil.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown基础语法</title>
    <link href="http://etvvil.github.io/2022/04/08/MarkDown%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>http://etvvil.github.io/2022/04/08/MarkDown%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</id>
    <published>2022-04-08T09:45:06.000Z</published>
    <updated>2022-04-25T16:08:19.172Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown基础语法"><a href="#Markdown基础语法" class="headerlink" title="Markdown基础语法"></a>Markdown基础语法</h1><h2 id="一-标题编辑"><a href="#一-标题编辑" class="headerlink" title="一. 标题编辑"></a>一. 标题编辑</h2><pre><code>在标题前使用‘#’， ‘#’越多标题级别越小（字体越小)</code></pre><hr><h2 id="二-正文"><a href="#二-正文" class="headerlink" title="二. 正文"></a>二. 正文</h2><p>换行记得在实际编写时隔一行</p><pre><code class="c++">/*HelloWorld*/</code></pre><p>Hello</p><p>World</p><hr><h2 id="三-代码模块"><a href="#三-代码模块" class="headerlink" title="三. 代码模块"></a>三. 代码模块</h2><p>在第一行末尾加上语言名字自动执行对应的语法高亮</p><pre><code class="c++">#include&lt;bits/stdc++.h&gt;using namespace std;int main(){    cout &lt;&lt; "Hello, MarkDown\n";}</code></pre><p><img src="https://pic2.zhimg.com/v2-7880bcfe5527b500f5fbdaa1d9349f59_b.webp" alt="代码高亮"></p><hr><h2 id="四-行内代码"><a href="#四-行内代码" class="headerlink" title="四. 行内代码"></a>四. 行内代码</h2><pre><code>正文中的代码输入``框出</code></pre><p>例子:  c++输出字符串：<code>printf("%s\n", ss);</code></p><p><img src="https://pic4.zhimg.com/v2-bb63b917c2a506bb23f7c4977bd1f553_b.webp" alt="行内代码"></p><hr><h2 id="五-列表"><a href="#五-列表" class="headerlink" title="五. 列表"></a>五. 列表</h2><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><pre><code>输入数字，加一个句点，然后空格即可；可以缩进(Tab键)空置多级列表；</code></pre><ol><li>a</li><li>b<ol><li>b1</li></ol></li><li>c</li><li>d<ol><li>d1<ol><li>d12<ol><li>d123</li></ol></li></ol></li></ol></li></ol><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><pre><code>输入-， 然后空格</code></pre><ul><li>abc</li><li>def<ul><li>fgh<ul><li>123</li></ul></li></ul></li></ul><hr><h2 id="六-字体"><a href="#六-字体" class="headerlink" title="六. 字体"></a>六. 字体</h2><pre><code class="c++">// 加粗**加粗**// 倾斜*倾斜*//加粗+倾斜***Glenville***// 删除线~~删除过的内容~~</code></pre><p><strong>加粗</strong><br><em>倾斜</em></p><p><em><strong>Glenville</strong></em></p><p><del>删除过的内容</del></p><hr><h2 id="七-引用"><a href="#七-引用" class="headerlink" title="七. 引用"></a>七. 引用</h2><pre><code class="c++">//引用语法&gt;作者：冰临神下&gt;&gt;作者：冰临神下&gt;&gt;&gt;作者：冰临神下</code></pre><blockquote><p>作者：冰临神下</p><blockquote><p>作者：冰临神下</p><blockquote><p>作者：冰临神下</p></blockquote></blockquote></blockquote><hr><h2 id="八-分割线"><a href="#八-分割线" class="headerlink" title="八. 分割线"></a>八. 分割线</h2><pre><code class="c++">// 分割线---// 分割线2***</code></pre><hr><hr><hr><h2 id="九-图片插入"><a href="#九-图片插入" class="headerlink" title="九. 图片插入"></a>九. 图片插入</h2><h3 id="1-本地图片"><a href="#1-本地图片" class="headerlink" title="1. 本地图片"></a>1. 本地图片</h3><pre><code class="c++">//![名字](本地路径)</code></pre><p>但以上只能本地访问,上传到github或者博客就显示不了, <del>可以采用HTML的语法改写路径:~~~~(&lt;)img src=”图片路径”/&gt;</del> </p><p>然而这样还是显示不出来……<br>通过STFW,决定用Github作为图床, 详情请参考这位大佬:    <a href="https://sghyxp.github.io/2018/10/29/hexo-addImg/index.html">https://sghyxp.github.io/2018/10/29/hexo-addImg/index.html</a></p><p>再次更新，通过picgo app能自动上传本地图片，So……</p><p><img src="https://github.com/etvvil/Typora/blob/main/nai_xu.png?raw=true" alt="本地图片"></p><h3 id="2-在线图片"><a href="#2-在线图片" class="headerlink" title="2. 在线图片"></a>2. 在线图片</h3><pre><code class="c++">//![名字](网页复制路径)</code></pre><p><img src="https://pic4.zhimg.com/v2-bb63b917c2a506bb23f7c4977bd1f553_b.webp" alt="行内代码"></p><hr><h2 id="十-超链接"><a href="#十-超链接" class="headerlink" title="十. 超链接"></a>十. 超链接</h2><pre><code class="c++">//超链接语法[名字](地址)</code></pre><p><a href="https://github.com/GlenvilleTwinko">我的Github</a></p><h2 id="完结撒花💐💐💐"><a href="#完结撒花💐💐💐" class="headerlink" title="完结撒花💐💐💐"></a>完结撒花💐💐💐</h2><p>先记到这儿,以后有需要再补充(逃)</p><p>以上所有内容来源于这两位大佬: </p><p>​    <a href="https://www.bilibili.com/video/BV1hJ411X75X?spm_id_from=333.337.search-card.all.click">https://www.bilibili.com/video/BV1hJ411X75X?spm_id_from=333.337.search-card.all.click</a></p><p>​    <a href="https://zhuanlan.zhihu.com/p/56943330">https://zhuanlan.zhihu.com/p/56943330</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Markdown基础语法&quot;&gt;&lt;a href=&quot;#Markdown基础语法&quot; class=&quot;headerlink&quot; title=&quot;Markdown基础语法&quot;&gt;&lt;/a&gt;Markdown基础语法&lt;/h1&gt;&lt;h2 id=&quot;一-标题编辑&quot;&gt;&lt;a href=&quot;#一-标题编辑&quot;</summary>
      
    
    
    
    
    <category term="基础工具" scheme="http://etvvil.github.io/tags/%E5%9F%BA%E7%A1%80%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>有关c++字符和字符串的一些使用技巧</title>
    <link href="http://etvvil.github.io/2022/04/08/%E6%9C%89%E5%85%B3c-string%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>http://etvvil.github.io/2022/04/08/%E6%9C%89%E5%85%B3c-string%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</id>
    <published>2022-04-08T09:08:42.000Z</published>
    <updated>2022-04-25T16:43:32.560Z</updated>
    
    <content type="html"><![CDATA[<ol><li>int k = 0…+ ‘A’ + ‘b’ + …</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;int k = 0…+ ‘A’ + ‘b’ + …&lt;/li&gt;
&lt;/ol&gt;
</summary>
      
    
    
    
    <category term="编程语言基础" scheme="http://etvvil.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/"/>
    
    <category term="cpp" scheme="http://etvvil.github.io/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80/cpp/"/>
    
    
    <category term="cpp" scheme="http://etvvil.github.io/tags/cpp/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://etvvil.github.io/2022/04/06/hello-world/"/>
    <id>http://etvvil.github.io/2022/04/06/hello-world/</id>
    <published>2022-04-06T07:54:15.643Z</published>
    <updated>2022-04-08T11:14:01.973Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new "My New Post"</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
